name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check package.json syntax
      run: node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"

    - name: Verify main entry point
      run: node -c src/index.js

    - name: Check personality files
      run: |
        for file in personalities/*.json; do
          echo "Checking $file"
          node -e "JSON.parse(require('fs').readFileSync('$file', 'utf8'))"
        done

    - name: Check configuration files
      run: |
        node -e "JSON.parse(require('fs').readFileSync('config/default.json', 'utf8'))"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit (allow failures)
      run: npm audit --audit-level=moderate || true

    - name: Check for known vulnerabilities
      run: |
        echo "Checking for high/critical vulnerabilities..."
        if npm audit --audit-level=high --json | grep -q '"vulnerabilities"'; then
          echo "High severity vulnerabilities found"
          npm audit --audit-level=high
          exit 1
        else
          echo "No high severity vulnerabilities found"
        fi

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Verify all core modules
      run: |
        echo "Checking core modules..."
        node -c src/core/gemini.js
        node -c src/core/memory.js
        node -c src/core/whatsapp.js
        echo "Checking handlers..."
        node -c src/handlers/commandHandler.js
        node -c src/handlers/messageHandler.js
        node -c src/handlers/responseHandler.js
        echo "Checking utilities..."
        node -c src/utils/config.js
        node -c src/utils/logger.js
        node -c src/utils/helpers.js
        node -c src/utils/personalityLoader.js
        echo "All modules syntax check passed!"

    - name: Test setup script
      run: node -c setup.js

    - name: Verify documentation files
      run: |
        echo "Checking documentation files exist..."
        test -f README.md
        test -f LICENSE
        test -f CHANGELOG.md
        test -f CONTRIBUTING.md
        test -f SECURITY.md
        test -f QUICKSTART.md
        echo "All documentation files present!"

  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Validate project structure
      run: |
        echo "Validating project structure..."
        test -d src
        test -d src/core
        test -d src/handlers
        test -d src/utils
        test -d personalities
        test -d config
        test -f package.json
        test -f .gitignore
        echo "Project structure is valid!"

    - name: Check for required files
      run: |
        echo "Checking for required files..."
        test -f src/index.js
        test -f personalities/custom.json
        test -f config/default.json
        test -f env.example
        echo "All required files present!"